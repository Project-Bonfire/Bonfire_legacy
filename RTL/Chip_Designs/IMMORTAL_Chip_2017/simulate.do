#########################################
# Copyright (C) 2016 Project Bonfire    #
#                                       #
# This file is automatically generated! #
#             DO NOT EDIT!              #
#########################################

vlib work

# Include files and compile them

# packages
vcom "network_files/component_pack.vhd"
vcom "plasma_RTL/mlite_pack.vhd"

# router and NI components
vcom "network_files/Allocator_with_checkers_with_FI/Arbiter_in_one_hot_checkers.vhd"
vcom "network_files/Allocator_with_checkers_with_FI/Arbiter_out_one_hot_pseudo_checkers.vhd"
vcom "network_files/Allocator_with_checkers_with_FI/allocator_logic_pseudo_checkers.vhd"
vcom "network_files/Allocator_with_checkers_with_FI/allocator_credit_counter_logic_pseudo_checkers.vhd"
vcom "network_files/FIFO_one_hot_credit_based_packet_drop_classifier_support_with_checkers_with_FI/FIFO_one_hot_credit_based_packet_drop_classifier_support_checkers.vhd"
vcom "network_files/LBDR_packet_drop_with_checkers_with_FI/Cx_Reconf_pseudo_checkers.vhd"
vcom "network_files/LBDR_packet_drop_with_checkers_with_FI/Rxy_Reconf_pseudo_checkers.vhd"
vcom "network_files/LBDR_packet_drop_with_checkers_with_FI/LBDR_packet_drop_routing_part_pseudo_checkers.vhd"

vcom -cover bcesfx "network_files/shift_register_serial_in.vhd"

# the following network files are tested in simulate_NoC.do
vcom "network_files/Allocator_with_checkers_with_FI/Arbiter_in_one_hot_with_checkers_with_FI.vhd"
vcom "network_files/Allocator_with_checkers_with_FI/arbiter_out_one_hot_with_checkers_with_FI.vhd"
vcom "network_files/Allocator_with_checkers_with_FI/allocator_with_checkers_with_FI.vhd"
vcom "network_files/FIFO_one_hot_credit_based_packet_drop_classifier_support_with_checkers_with_FI/FIFO_one_hot_credit_based_packet_drop_classifier_support_with_checkers_with_FI.vhd"
vcom "network_files/LBDR_packet_drop_with_checkers_with_FI/LBDR_packet_drop_with_checkers_with_FI.vhd"
vcom "network_files/ParityChecker_for_LBDR.vhd"
vcom "network_files/counter_threshold.vhd"
vcom "network_files/Fault_injector.vhd"
vcom "network_files/NI.vhd"
vcom "network_files/xbar.vhd"

vcom "network_files/customized_routers/Router_32_bit_NW_credit_based_packet_drop_classifier_SHMU_will_full_set_of_checkers_with_FI.vhd"
vcom "network_files/customized_routers/Router_32_bit_NE_credit_based_packet_drop_classifier_SHMU_will_full_set_of_checkers_with_FI.vhd"
vcom "network_files/customized_routers/Router_32_bit_SW_credit_based_packet_drop_classifier_SHMU_will_full_set_of_checkers_with_FI.vhd"
vcom "network_files/customized_routers/Router_32_bit_SE_credit_based_packet_drop_classifier_SHMU_will_full_set_of_checkers_with_FI.vhd"

# IJTAG-related components
vcom -cover bcesfx "IJTAG_files/SIB_mux_pre_FCX_SELgate.vhd"
vcom -cover bcesfx "IJTAG_files/ScanMux.vhd"
vcom -cover bcesfx "IJTAG_files/ScanRegister.vhd"
vcom -cover bcesfx "IJTAG_files/SReg.vhd"
vcom -cover bcesfx "IJTAG_files/AsyncDataRegisterAdapter.vhd"

# plasma components
# vcom -cover bcesfx "plasma_RTL/memory_sim.vhd"
vcom -cover bcesfx "plasma_RTL/alu.vhd"
vcom -cover bcesfx "plasma_RTL/bus_mux.vhd"
vcom -cover bcesfx "plasma_RTL/control.vhd"
vcom -cover bcesfx "plasma_RTL/ddr_ctrl.vhd"
vcom -cover bcesfx "plasma_RTL/mem_ctrl.vhd"
vcom -cover bcesfx "plasma_RTL/mult.vhd"
vcom -cover bcesfx "plasma_RTL/pc_next.vhd"
vcom -cover bcesfx "plasma_RTL/pipeline.vhd"

# for normal simulation use this:
vcom -cover bcesfx "plasma_RTL/ram.vhd"
# vcom -cover bcesfx "Testbenches/ram_stub_xilinx_for_questa.vhd"


# to use the verilog of the memory use the following 2 lines:
# vlog -reportprogress 300 -work work "plasma_RTL/ts1n40lpb4096x32m4s_210b_tt1p1v25c.v"
# vcom -cover bcesfx "plasma_RTL/ram_wrapper.vhd"

#vlog -reportprogress 300 -work work "plasma_RTL/SHKA65_4096X32X1CM4.v"
#vcom -cover bcesfx "plasma_RTL/ram_wrapper_65.vhd"


vcom -cover bcesfx "plasma_RTL/reg_bank_tri_port.vhd"
vcom -cover bcesfx "plasma_RTL/shifter.vhd"
vcom -cover bcesfx "plasma_RTL/uart.vhd"
vcom -cover bcesfx "plasma_RTL/mlite_cpu.vhd"
vcom -cover bcesfx "plasma_RTL/plasma.vhd"
vcom -cover bcesfx "plasma_RTL/NoC_Node.vhd"

vcom -cover bcesfx "network_files/network_2x2_customized_packet_drop_SHMU_credit_based_with_checkers.vhd"
vcom -cover bcesfx "network_files/network_2x2_customized_packet_drop_SHMU_credit_based_with_checkers_with_PE_top.vhd"

vcom "Testbenches/sim_uart.vhd"
vcom "Testbenches/network_2x2_NI_PE_credit_based_tb_top.vhd"


# Start the simulation
vsim -coverage -voptargs="+cover=bcestfx" work.tb_network_2x2

# Draw waves
do do_files/wave_2x2_with_top.do
# Run the simulation for 4ms
run 4 ms
run 36 ms
# do do_files/fault_inject_links_top_3000ns.do 	#use to inject files in the simulation(not using IJTAG)
coverage report -file report.txt -byfile -assert -directive -cvg -codeAll
